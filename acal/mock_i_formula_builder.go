// Code generated by mockery v2.28.1. DO NOT EDIT.

package acal

import mock "github.com/stretchr/testify/mock"

// MockIFormulaBuilder is an autogenerated mock type for the IFormulaBuilder type
type MockIFormulaBuilder struct {
	mock.Mock
}

// NewFormulaFunctionCall provides a mock function with given fields: fnName, arguments
func (_m *MockIFormulaBuilder) NewFormulaFunctionCall(fnName string, arguments ...interface{}) *SyntaxNode {
	var _ca []interface{}
	_ca = append(_ca, fnName)
	_ca = append(_ca, arguments...)
	ret := _m.Called(_ca...)

	var r0 *SyntaxNode
	if rf, ok := ret.Get(0).(func(string, ...interface{}) *SyntaxNode); ok {
		r0 = rf(fnName, arguments...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*SyntaxNode)
		}
	}

	return r0
}

// NewFormulaTwoValMiddleOp provides a mock function with given fields: v1, v2, op, opDesc
func (_m *MockIFormulaBuilder) NewFormulaTwoValMiddleOp(v1 Value, v2 Value, op Op, opDesc string) *SyntaxNode {
	ret := _m.Called(v1, v2, op, opDesc)

	var r0 *SyntaxNode
	if rf, ok := ret.Get(0).(func(Value, Value, Op, string) *SyntaxNode); ok {
		r0 = rf(v1, v2, op, opDesc)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*SyntaxNode)
		}
	}

	return r0
}

type mockConstructorTestingTNewMockIFormulaBuilder interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockIFormulaBuilder creates a new instance of MockIFormulaBuilder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockIFormulaBuilder(t mockConstructorTestingTNewMockIFormulaBuilder) *MockIFormulaBuilder {
	mock := &MockIFormulaBuilder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
