// Code generated by mockery v2.15.0. DO NOT EDIT.

package acal

import mock "github.com/stretchr/testify/mock"

// MockIValueCache is an autogenerated mock type for the IValueCache type
type MockIValueCache struct {
	mock.Mock
}

// Flatten provides a mock function with given fields:
func (_m *MockIValueCache) Flatten() map[string]Value {
	ret := _m.Called()

	var r0 map[string]Value
	if rf, ok := ret.Get(0).(func() map[string]Value); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]Value)
		}
	}

	return r0
}

// Take provides a mock function with given fields: v
func (_m *MockIValueCache) Take(v Value) bool {
	ret := _m.Called(v)

	var r0 bool
	if rf, ok := ret.Get(0).(func(Value) bool); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewMockIValueCache interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockIValueCache creates a new instance of MockIValueCache. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockIValueCache(t mockConstructorTestingTNewMockIValueCache) *MockIValueCache {
	mock := &MockIValueCache{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
