// Code generated by mockery v2.15.0. DO NOT EDIT.

package acal

import mock "github.com/stretchr/testify/mock"

// MockNameValuePair is an autogenerated mock type for the NameValuePair type
type MockNameValuePair struct {
	mock.Mock
}

// GetName provides a mock function with given fields:
func (_m *MockNameValuePair) GetName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetValue provides a mock function with given fields:
func (_m *MockNameValuePair) GetValue() any {
	ret := _m.Called()

	var r0 any
	if rf, ok := ret.Get(0).(func() any); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(any)
		}
	}

	return r0
}

type mockConstructorTestingTNewMockNameValuePair interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockNameValuePair creates a new instance of MockNameValuePair. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockNameValuePair(t mockConstructorTestingTNewMockNameValuePair) *MockNameValuePair {
	mock := &MockNameValuePair{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
